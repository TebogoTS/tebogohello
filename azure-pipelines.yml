trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: Build
    displayName: 'Build the MuleSoft Application'
    steps:
      - checkout: self
        displayName: 'Checkout the repository'

      - task: Cache@2
        displayName: 'Cache Maven dependencies'
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          path: $(MAVEN_CACHE_FOLDER)
          restoreKeys: |
            maven | "$(Agent.OS)"
        
      - task: JavaToolInstaller@0
        displayName: 'Set up JDK 1.8'
        inputs:
          versionSpec: '1.8'
          jdkArchitectureOption: x64

      - script: |
          mvn -B package --file pom.xml
        displayName: 'Build with Maven'

      - script: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(Build.SourceVersion)
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2
        displayName: 'Stamp artifact file with commit hash'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'target/*.jar'
          artifactName: 'artifacts'
        displayName: 'Upload artifact'

  - job: Deploy
    dependsOn: Build
    displayName: 'Deploy to Anypoint Exchange Sandbox'
    steps:
      - checkout: self
        displayName: 'Checkout the repository'

      - task: Cache@2
        displayName: 'Cache Maven dependencies'
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          path: $(MAVEN_CACHE_FOLDER)
          restoreKeys: |
            maven | "$(Agent.OS)"

      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'artifacts'
        displayName: 'Download artifact'

      - script: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy \
            -Dmule.artifact=$artifactName \
            -Danypoint.username="$(ANYPOINT_PLATFORM_USERNAME)" \
            -Danypoint.password="$(ANYPOINT_PLATFORM_PASSWORD)"
        displayName: 'Deploy to Sandbox'
        env:
          ANYPOINT_PLATFORM_USERNAME: $(ANYPOINT_PLATFORM_USERNAME)
          ANYPOINT_PLATFORM_PASSWORD: $(ANYPOINT_PLATFORM_PASSWORD)
